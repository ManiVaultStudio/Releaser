name: Test releaser

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Application name'
        required: true
        default: 'test'
        type: choice
        options:
        - '1.1'
        - '1.0'
        - genesurfer
        - test
        - comparison_viewer
      build-core:
        type: boolean
        default: false
        description: Build core
      build-data-plugins:
        type: boolean
        default: false
        description: Build data plugins
      build-plugins:
        type: boolean
        default: true
        description: Build plugins
      build-installer:
        type: boolean
        description: Build installer
        default: false
      verbose:
        type: boolean
        description: Verbose
        default: true
jobs:
  build-core:
    name: Build core
    runs-on: ubuntu-latest
    steps:
      - name: Trigger core build workflow
        uses: the-actions-org/workflow-dispatch@v4
        if: ${{ inputs.build-core == true }}
        with:
          workflow: build.yml
          repo: ManiVaultStudio/core
          ref: release/${{ inputs.version }}
          token: ${{ secrets.PA_TOKEN }}
          wait-for-completion: true
          wait-for-completion-timeout: 2h
          display-workflow-run-url: true
          workflow-logs: print
  load-data-plugins-matrix:
    name: Load data plugins matrix
    runs-on: ubuntu-latest
    needs: build-core
    if: ${{ inputs.build-data-plugins == true }}
    continue-on-error: true
    outputs:
      matrix: ${{ steps.extract-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Load data plugins matrix from JSON
        id: extract-matrix
        run: |
          matrix=$(jq -c '.data_plugins' config/test.json)
          echo "Extracted matrix: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
  print-data-plugins-matrix:
    name: Print data plugins matrix
    runs-on: ubuntu-latest
    needs: load-data-plugins-matrix
    if: ${{ inputs.verbose == true && needs.load-data-plugins-matrix.outputs.matrix != '[]' }}
    continue-on-error: true
    outputs:
      matrix: ${{ steps.load-data-plugins-matrix.outputs.matrix }}
    steps:
      - name: Print the data plugins matrix output
        run: |
          echo "Data plugins matrix output: ${{ needs.load-data-plugins-matrix.outputs.matrix }}"
  build-data-plugins:
    runs-on: ubuntu-latest
    needs: load-data-plugins-matrix
    strategy:
        matrix:
          repo: ${{ fromJSON(needs.load-data-plugins-matrix.matrix) }}
    continue-on-error: true
    name: Build - ${{ matrix.repo.name }}
    steps:
      - name: Trigger data plugin build workflow
        uses: the-actions-org/workflow-dispatch@v4
        if: ${{ inputs.build-data-plugins == true }}
        with:
          workflow: build.yml
          repo: ManiVaultStudio/${{ matrix.repo.name }}
          ref: ${{ matrix.repo.branch }}
          token: ${{ secrets.PA_TOKEN }}
          wait-for-completion: true
          wait-for-completion-timeout: 2h
          display-workflow-run-url: true
          workflow-logs: print
          inputs: '{ "forceMacBuild": true }'
  load-plugins-matrix:
    name: Load plugins matrix
    runs-on: ubuntu-latest
    needs: build-data-plugins
    if: ${{ always() && inputs.build-plugins == true }}
    continue-on-error: true
    outputs:
      matrix: ${{ steps.extract-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Load plugins matrix from JSON
        id: extract-matrix
        run: |
          matrix=$(jq -c '.plugins' config/test.json)
          echo "Extracted matrix: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
  print-plugins-matrix:
    name: Print plugins matrix
    runs-on: ubuntu-latest
    needs: load-plugins-matrix
    if: ${{ always() && inputs.verbose == true && needs.load-plugins-matrix.outputs.matrix != '[]' }}
    continue-on-error: true
    outputs:
      matrix: ${{ steps.load-plugins-matrix.outputs.matrix }}
    steps:
      - name: Print the plugins matrix output
        run: |
          echo "Plugins matrix output: ${{ needs.load-plugins-matrix.outputs.matrix }}"
  build-plugins:
    runs-on: ubuntu-latest
    needs: load-plugins-matrix
    continue-on-error: true
    strategy:
        matrix:
          repo: ${{ fromJSON(needs.load-plugins-matrix.outputs.matrix) }}
    name: Build - ${{ matrix.repo.name }}
    steps:
      - name: Trigger plugin build workflow
        uses: the-actions-org/workflow-dispatch@v4
        with:
          workflow: build.yml
          repo: ManiVaultStudio/${{ matrix.repo.name }}
          ref: ${{ matrix.repo.branch }}
          token: ${{ secrets.PA_TOKEN }}
          wait-for-completion: true
          wait-for-completion-timeout: 2h
          display-workflow-run-url: true
          workflow-logs: print
